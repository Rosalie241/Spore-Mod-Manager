<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:cui="clr-namespace:SporeMods.CommonUI"
			xmlns:core="clr-namespace:SporeMods.Core;assembly=SporeMods.Core"
			xmlns:mods="clr-namespace:SporeMods.Core.Mods;assembly=SporeMods.Core"
			xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
			xmlns:shale="clr-namespace:SporeMods.CommonUI.Themes.Shale"
			xmlns:autocomp="clr-namespace:WPFTextBoxAutoComplete;assembly=WPFTextBoxAutoComplete"
			xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Shale.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Converters.xaml"/>

        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ActionBox.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Window.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ScrollBar.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/ListView.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/Button.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/SporeMods.CommonUI;component/Themes/Shale/Control/GroupBox.xaml"/>
    
    </ResourceDictionary.MergedDictionaries>





    <!--### Icon't for mods which don't have their own icons (not presently used, will likely be used in future) ###-->
    <!--cui:FloorPanel x:Key="NoIconModIcon" x:Shared="False" Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Ellipse Stroke="{DynamicResource ButtonIdleBorderBrush}" StrokeThickness="1">
            <Ellipse.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonIdleBackgroundGradientStops}"/>
            </Ellipse.Fill>
        </Ellipse>
        <Ellipse Margin="2">
            <Ellipse.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ButtonBackgroundGradientStops}"/>
            </Ellipse.Fill>
        </Ellipse>
        <TextBlock Text="?" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" Foreground="{DynamicResource ButtonForegroundBrush}" FontSize="15" FontWeight="Black" Effect="{DynamicResource DropShadow}"/>
    </cui:FloorPanel-->


    <!--### Triangular background for alerts on mod list entries ###-->
    <ControlTemplate x:Key="AlertIconBackgroundTemplate">
        <cui:FloorPanel Width="32" Height="32" HorizontalAlignment="Center" VerticalAlignment="Center" Effect="{DynamicResource DropShadow}">
            <Path Data="M 0 32 L 16 0 L 32 32 Z" Stroke="{DynamicResource RedButtonBorderBrush}" StrokeThickness="1">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource RedButtonBackgroundGradientStops}"/>
                </Path.Fill>
            </Path>
            <Path Data="M 0 26 L 13 0 L 26 26 Z" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,1,0,-1">
                <Path.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource RedButtonSecondaryBackgroundGradientStops}"/>
                </Path.Fill>
            </Path>
        </cui:FloorPanel>
    </ControlTemplate>


    <!--### Progress bar stuff shown on mod list entries ###-->
    <Style x:Key="ModListProgressDisplayStyle" TargetType="Control">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock x:Name="TaskStateTextBlock" HorizontalAlignment="Left" VerticalAlignment="Center" TextAlignment="Left" Text="{DynamicResource Mods!ListEntry!Tasks!Install}" Margin="0,0,4,0"/>
                        <ProgressBar x:Name="ModProgressBar" Width="100" Height="24" Value="{Binding Progress, Mode=OneWay}" Minimum="0" Maximum="{Binding ProgressTotal, Mode=OneWay}" VerticalAlignment="Stretch"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Status}" Value="Indeterminate">
                            <Setter TargetName="ModProgressBar" Property="IsIndeterminate" Value="True"/>
                            <Setter TargetName="TaskStateTextBlock" Property="Text" Value="{DynamicResource Mods!ListEntry!Tasks!Pending}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Category}" Value="Upgrade">
                            <Setter TargetName="TaskStateTextBlock" Property="Text" Value="{DynamicResource Mods!ListEntry!Tasks!Update}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Category}" Value="Reconfigure">
                            <Setter TargetName="TaskStateTextBlock" Property="Text" Value="{DynamicResource Mods!ListEntry!Tasks!Reconfigure}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Category}" Value="Uninstall">
                            <Setter TargetName="TaskStateTextBlock" Property="Text" Value="{DynamicResource Mods!ListEntry!Tasks!Uninstall}"/>
                        </DataTrigger>
                        <Trigger SourceName="ModProgressBar" Property="IsIndeterminate" Value="True">
                            <Setter TargetName="ModProgressBar" Property="Template" Value="{DynamicResource TemporaryIndeterminateProgressBarTemplate}"/>
                            <Setter TargetName="ModProgressBar" Property="Background" Value="#00FF00"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Category}" Value="Rollback">
                            <Setter TargetName="ModProgressBar" Property="IsIndeterminate" Value="True"/>
                            <Setter TargetName="ModProgressBar" Property="Background" Value="#FF0000"/>
                            <Setter TargetName="TaskStateTextBlock" Property="Text" Value="{DynamicResource Mods!ListEntry!Tasks!Rollback}"/>
                            <Setter TargetName="TaskStateTextBlock" Property="Foreground" Value="{DynamicResource ErrorTextBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="InstalledModsGridViewHeaderRowPresenterBackdropStyle" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border x:Name="BackgroundBorder" Style="{DynamicResource HorizontalBarBorderStyle}" DockPanel.Dock="Top">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0,2" EndPoint="0,0" GradientStops="{DynamicResource HorizontalPanelBackgroundGradientStops}"/>
                        </Border.Background>
                        <cui:FloorPanel>
                            <Separator VerticalAlignment="Top"
                                    cui:AttachedProperties.CastDirection="Down"
                                    Margin="5,0"/>
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="0,2,0,0"/>
                        </cui:FloorPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="InstalledModsGridViewScrollViewerStyleKey" TargetType="{x:Type ScrollViewer}" BasedOn="{StaticResource {x:Type ScrollViewer}}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollViewer DockPanel.Dock="Top"
                                        Grid.ColumnSpan="2"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden"
                                        Focusable="false">
                            <ContentControl Style="{DynamicResource InstalledModsGridViewHeaderRowPresenterBackdropStyle}">
                                <GridViewHeaderRowPresenter Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
                                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                            Margin="10,0"/>
                            </ContentControl>
                        </ScrollViewer>
                        <Rectangle Height="18"
                                Margin="0,0,0,-18"
                                VerticalAlignment="Top"
                                IsHitTestVisible="False"
                                Grid.Row="1"
                                Grid.ColumnSpan="2">
                            <Rectangle.Fill>
                                <LinearGradientBrush Opacity="0.75" StartPoint="0,0" EndPoint="0,1" GradientStops="{DynamicResource ShadowGradientStops}"/>
                            </Rectangle.Fill>
                        </Rectangle>
                        <ScrollContentPresenter Margin="{TemplateBinding Padding}"
                                                Grid.Column="0"
                                                Grid.Row="1"
                                                KeyboardNavigation.DirectionalNavigation="Local"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <e:Interaction.Behaviors>
                                <cui:SmoothScrollBehavior/>
                            </e:Interaction.Behaviors>
                        </ScrollContentPresenter>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                Value="{TemplateBinding VerticalOffset}"
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Visibility="Collapsed"
                                Grid.Column="1"
                                Grid.Row="1">
                        </ScrollBar>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                Orientation="Horizontal"
                                Value="{TemplateBinding HorizontalOffset}"
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Visibility="Collapsed"
                                Grid.Column="0"
                                Grid.Row="2">
                        </ScrollBar>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ComputedVerticalScrollBarVisibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar"
                                                        Storyboard.TargetProperty="Visibility"
                                                        Duration="0:0:0.001">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                        Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Width"
                                                         To="18"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_VerticalScrollBar"
                                                         Storyboard.TargetProperty="Width"
                                                         To="0"
                                                         Duration="0:0:0.125" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_VerticalScrollBar"
                                                        Storyboard.TargetProperty="Visibility"
                                                        BeginTime="0:0:0.124"
                                                        Duration="0:0:0.001">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.001"
                                                        Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="ComputedHorizontalScrollBarVisibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar"
                                                        Storyboard.TargetProperty="Visibility"
                                                        Duration="0:0:0.001">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0"
                                                        Value="{x:Static Visibility.Visible}"/>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Height"
                                                         To="18"
                                                         Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PART_HorizontalScrollBar"
                                                         Storyboard.TargetProperty="Height"
                                                         To="0"
                                                         Duration="0:0:0.125" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_HorizontalScrollBar"
                                                        Storyboard.TargetProperty="Visibility"
                                                        BeginTime="0:0:0.124"
                                                        Duration="0:0:0.001">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.001"
                                                        Value="{x:Static Visibility.Collapsed}"/>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--### Installed mods list ###-->
    <Style x:Key="InstalledModsListViewStyle" TargetType="{x:Type ListView}" BasedOn="{StaticResource {x:Type ListView}}">
        <Setter Property="Margin" Value="0,-1,0,0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                        <ScrollViewer x:Name="PART_ScrollViewer"
                                        Style="{DynamicResource InstalledModsGridViewScrollViewerStyleKey}"
                                        Margin="0"
                                        Padding="0"
                                        BorderThickness="0">
                            <cui:AttachedProperties.CornerCurves>
                                <cui:CornerCurves TopLeft="False" TopRight="False" BottomRight="False" BottomLeft="False"/>
                            </cui:AttachedProperties.CornerCurves>
                            <Border x:Name="ItemsPresenterBorder" Background="#01000000">
                                <e:Interaction.Behaviors>
                                    <cui:DeselectOnClickBlankBehavior ItemsPresenterElement="{Binding Source={x:Reference ItemsPresenter}}"/>
                                </e:Interaction.Behaviors>
                                <ItemsPresenter x:Name="ItemsPresenter"/>
                            </Border>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CardListViewItemStyle}"/>
        <!--Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <cui:StackPanelEx Orientation="Vertical" Spacing="-4" IsItemsHost="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter-->
    </Style>

    <!--Style x:Key="DropdownToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource CaptionButtonBaseStyle}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="0"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}, FallbackValue=False}" Value="False"/>
                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}, FallbackValue=False}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource TitlebarHoverForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style-->

    <!--### Display name text for mod list entries ###-->
    <Style x:Key="InstalledModHeader">
        <Setter Property="TextElement.FontWeight" Value="DemiBold"/>
    </Style>
    
    <!--### Subheader text for mod list entries, e.g. for manually-installed mods ###-->
    <Style x:Key="InstalledModSubText">
        <Setter Property="Control.Opacity" Value="0.5"/>
    </Style>
    
    <!--### Expand/collapse button for mod list entries ###-->
    <Style x:Key="ModEntryExpandCollapseToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource GlyphButtonBaseStyle}">
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <cui:Zone Background="#01000000" ToolTip="{Binding}">
                        <Path x:Name="Arrow"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 2 0 L 6 4
                                L 10 0 L 12 0 L 12 2
                                L 6 8 L 0 2 Z"
                            Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}"
                            RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <RotateTransform Angle="0"/>
                            </Path.RenderTransform>
                        </Path>
                    </cui:Zone>
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="RenderTransform.Angle" To="180" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Arrow" Storyboard.TargetProperty="RenderTransform.Angle" To="0" Duration="0:0:0.125"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Checkmark for "yes, this mod does this" columns in mods list ###-->
    <Style x:Key="BooleanColumnCheckmarkStyle" TargetType="{x:Type Control}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Path Data="M 0 3 L 2 3 L 5 6 L 11 0 L 13 0 L 13 2 L 5 10 L 0 5 Z"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListViewItem}}}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--### Top area with search bar and such in mods tab ###-->
    <Style x:Key="ModsListFilterBarStyle" TargetType="{x:Type cui:Zone}">
        <Setter Property="Height" Value="40"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:Zone}">
                    <cui:FloorPanel>
                        <Border x:Name="BackgroundBorder" Style="{DynamicResource HorizontalBarBorderStyle}" DockPanel.Dock="Top">
                            <ContentPresenter Content="{TemplateBinding Content}" Margin="5"/>
                        </Border>
                    </cui:FloorPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Canvas x:Key="SearchGoIcon" x:Shared="False" Width="16" Height="16">
        <Path Data="M 0 7 L 7 0" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" StrokeThickness="2" Canvas.Top="9"/>
        <Ellipse Width="11" Height="11" Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" StrokeThickness="2" Canvas.Left="5"/>
    </Canvas-->
    
    <Path x:Key="SearchGoIcon" x:Shared="False"
        Data="{DynamicResource Spyglass}"
        Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}"/>
    <Path x:Key="SearchCancelIcon" x:Shared="False"
        Data="{DynamicResource DiagonalCross!Large}"
        Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}"/>
    
    <!--### Search installed mods box ###-->
    <Style x:Key="SearchBoxStyle" TargetType="{x:Type cui:ActionBox}" BasedOn="{StaticResource {x:Type cui:ActionBox}}">
        <Setter Property="Height" Value="29"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="cui:AttachedProperties.Icon" Value="{DynamicResource SearchCancelIcon}"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="cui:AttachedProperties.Icon" Value="{DynamicResource SearchGoIcon}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Path x:Key="SearchTargetsToggleButtonIcon" x:Shared="False"
        Data="{DynamicResource Arrow!Down!Small}"
        Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}"
        RenderTransformOrigin="0.5,0.5">
        <!--HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0"-->
        <!--{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}-->
        <Path.RenderTransform>
            <RotateTransform Angle="0"/>
        </Path.RenderTransform>
        <Path.Style>
            <Style TargetType="Path">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ToggleButton}}}" Value="True">
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" To="180" Duration="0:0:0.125" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" To="0" Duration="0:0:0.125" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Path.Style>
    </Path>
    
    <!--### ToggleButton for search mod names/descriptions/etc dropdown list ###-->
    <Style x:Key="SearchTargetsToggleButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Content" Value="{DynamicResource SearchTargetsToggleButtonIcon}"/>
    </Style>

    <!--### 'Click button to install mods' call-to-action ###-->
    <Style x:Key="InstallModsPromptZoneStyle" TargetType="{x:Type cui:Zone}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type cui:Zone}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ContentPresenter Content="{TemplateBinding Content}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Grid.ColumnSpan="4"
                                        TextElement.Foreground="{DynamicResource WindowForegroundBrush}"
                                        Style="{DynamicResource h2}"/>
                        <Path x:Name="ArrowHintPath" Data="M 15 0 L 14 50 L 0 35 L 15 50 L 30 35 L 16 50 Z" Stroke="{DynamicResource WindowForegroundBrush}" StrokeThickness="3" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="20,0">
                            <Path.RenderTransform>
                                <TranslateTransform x:Name="HowToArrowTranslateTransform0" X="0" Y="-20"/>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsVisible" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ArrowHintPath" Storyboard.TargetProperty="RenderTransform.Y" From="-20" To="0" Duration="0:0:0.500" RepeatBehavior="Forever" AutoReverse="True">
                                            <DoubleAnimation.EasingFunction>
                                                <CubicEase EasingMode="EaseOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
