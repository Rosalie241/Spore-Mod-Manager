//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:/Linux/projects/Spore-Mod-Manager/SporeMods.Core/ArgScript\ArgScript.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="ArgScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IArgScriptListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoot([NotNull] ArgScriptParser.RootContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoot([NotNull] ArgScriptParser.RootContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] ArgScriptParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] ArgScriptParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInclude([NotNull] ArgScriptParser.IncludeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInclude([NotNull] ArgScriptParser.IncludeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.pragma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPragma([NotNull] ArgScriptParser.PragmaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.pragma"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPragma([NotNull] ArgScriptParser.PragmaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] ArgScriptParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] ArgScriptParser.BlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIf([NotNull] ArgScriptParser.IfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIf([NotNull] ArgScriptParser.IfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.elif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElif([NotNull] ArgScriptParser.ElifContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.elif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElif([NotNull] ArgScriptParser.ElifContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElse([NotNull] ArgScriptParser.ElseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElse([NotNull] ArgScriptParser.ElseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>op</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOp([NotNull] ArgScriptParser.OpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>op</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOp([NotNull] ArgScriptParser.OpContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>comp</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComp([NotNull] ArgScriptParser.CompContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>comp</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComp([NotNull] ArgScriptParser.CompContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>paren</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParen([NotNull] ArgScriptParser.ParenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>paren</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParen([NotNull] ArgScriptParser.ParenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>bool</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBool([NotNull] ArgScriptParser.BoolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>bool</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBool([NotNull] ArgScriptParser.BoolContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>atomic</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomic([NotNull] ArgScriptParser.AtomicContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>atomic</c>
	/// labeled alternative in <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomic([NotNull] ArgScriptParser.AtomicContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCall([NotNull] ArgScriptParser.CallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCall([NotNull] ArgScriptParser.CallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParam([NotNull] ArgScriptParser.ParamContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.param"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParam([NotNull] ArgScriptParser.ParamContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRef([NotNull] ArgScriptParser.RefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRef([NotNull] ArgScriptParser.RefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommand([NotNull] ArgScriptParser.CommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommand([NotNull] ArgScriptParser.CommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgument([NotNull] ArgScriptParser.ArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgument([NotNull] ArgScriptParser.ArgumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] ArgScriptParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] ArgScriptParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="ArgScriptParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] ArgScriptParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="ArgScriptParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] ArgScriptParser.KeywordContext context);
}
