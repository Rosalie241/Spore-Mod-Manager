//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Z:/Linux/projects/Spore-Mod-Manager/SporeMods.Core/ArgScript\ArgScript.g4 by ANTLR 4.9.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="ArgScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.1")]
[System.CLSCompliant(false)]
public interface IArgScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.root"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRoot([NotNull] ArgScriptParser.RootContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] ArgScriptParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.include"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInclude([NotNull] ArgScriptParser.IncludeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] ArgScriptParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] ArgScriptParser.IfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.elif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElif([NotNull] ArgScriptParser.ElifContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse([NotNull] ArgScriptParser.ElseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] ArgScriptParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.call"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCall([NotNull] ArgScriptParser.CallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.paramList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParamList([NotNull] ArgScriptParser.ParamListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.ref"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRef([NotNull] ArgScriptParser.RefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.stringInterp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStringInterp([NotNull] ArgScriptParser.StringInterpContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.command"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitCommand([NotNull] ArgScriptParser.CommandContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.argument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArgument([NotNull] ArgScriptParser.ArgumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] ArgScriptParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="ArgScriptParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitKeyword([NotNull] ArgScriptParser.KeywordContext context);
}
