<Window x:Class="SporeMods.Views.MainView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:core="clr-namespace:SporeMods.Core;assembly=SporeMods.Core"
             xmlns:mech="clr-namespace:SporeMods.CommonUI;assembly=SporeMods.CommonUI"
             xmlns:cui="clr-namespace:SporeMods.CommonUI;assembly=SporeMods.CommonUI"
             xmlns:e="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:v="clr-namespace:SporeMods.Views"
             xmlns:vm="clr-namespace:SporeMods.ViewModels"
             xmlns:local="clr-namespace:SporeMods.Manager"
             mc:Ignorable="d"
             cui:WindowChromeHelper.UseCustomDecorations="{x:Static core:Settings.UseCustomWindowDecorations}"
             cui:WindowChromeHelper.ExtendedTitleBarHeight="30"
             Width="800"
             Height="450"
             MinWidth="700"
             MinHeight="400"
             Title="{Binding Title}"
             Style="{DynamicResource {x:Type Window}}">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Grid>
        <Control x:Name="WindowBackdropControl"
                Style="{DynamicResource WindowBackdropControlStyle}"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Visibility="Collapsed"/>
		<DockPanel>
			<ContentControl Style="{DynamicResource MainWindowFooterContentControlStyle}"
                            DockPanel.Dock="Bottom">
				<UniformGrid Rows="1"
                            UseLayoutRounding="True">
                    <Button x:Name="InstallModsButton"
                            Content="{DynamicResource Footer!InstallMods}"
                            Style="{DynamicResource InstallModsButtonStyle}"
                            Command="{Binding InstallModsCommand}">
                            <!--Command="{Binding InstallModsCommand, Converter={x:Static cui:Func.Cmd}}"
                            CommandParameter="{x:Null}"/-->
                        <!--e:Interaction.Triggers>
                            <e:EventTrigger EventName="Click">
                                <e:InvokeCommandAction Command="{Binding InstallModsCommand}"
                                                    CommandParameter="{x:Null}"/>
                            </e:EventTrigger>
                        </e:Interaction.Triggers-->
                    </Button>
                    <Button x:Name="ChangeModSettingsButton"
                            Content="{DynamicResource Footer!ConfigureMod}"
                            Style="{DynamicResource ConfigureModButtonStyle}"
                            IsEnabled="{Binding CanChangeModSettings}"
                            Command="{Binding ChangeModSettingsCommand}"/>
                    <Button x:Name="UninstallModsButton"
                            Content="{DynamicResource Footer!UninstallMods}"
                            Style="{DynamicResource UninstallModsButtonStyle}"
                            IsEnabled="{Binding CanUninstallMods}"
                            Command="{Binding UninstallModsCommand}"/>
					<Grid>
                        <Button x:Name="LaunchSporeButton"
                                Content="{DynamicResource Footer!LaunchGame}"
                                IsEnabled="{Binding CanLaunchSpore}"
                                Style="{DynamicResource LaunchGameButtonStyle}"
                                Command="{Binding LaunchSporeCommand}"/>
						<ProgressBar x:Name="OverallProgressProgressBar"
                                    Minimum="0"
                                    Maximum="{Binding OverallProgressTotal, Source={x:Static core:ModsManager.Instance}, Mode=OneWay}"
                                    Value="{Binding OverallProgress, Source={x:Static core:ModsManager.Instance}, Mode=OneWay}"
                                    Visibility="{Binding AnyTasksRunning, Source={x:Static core:ModsManager.Instance}, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                                    Margin="5,5,10,5"/>
					</Grid>
				</UniformGrid>
			</ContentControl>
            <TabControl x:Name="PrimaryTabControl" 
                        Style="{DynamicResource PrimaryTabControlStyle}"
                        SelectedIndex="{Binding SelectedTabIndex}">
                    <!--e:Interaction.Triggers>
                        <e:EventTrigger EventName="SelectionChanged">
                            <e:InvokeCommandAction Command="{Binding TabSelectedCommand}"
                                                CommandParameter="{Binding SelectedIndex, ElementName=PrimaryTabControl}"/>
                        </e:EventTrigger>
                    </e:Interaction.Triggers-->
                <TabItem x:Name="ModsTabItem" Header="{DynamicResource Mods!Header}">
                    <v:InstalledModsView/>
                </TabItem>
                <TabItem x:Name="SettingsTabItem" Header="{DynamicResource Settings!Header}">
                </TabItem>
                <TabItem x:Name="HelpTabItem" Header="{DynamicResource Help!Header}">
                    <v:HelpView/>
                </TabItem>
                <!--TabItem x:Name="TestTabItem" Header="Test (NOT LOCALIZED)">
                </TabItem-->
			</TabControl>
        </DockPanel>
        <v:ModalDisplayView/>
        <!--mech:AnimatableContentControl x:Name="ModalDisplay"
                                    IsOpen="{Binding HasModal}">
            <Control DataContext="{Binding Path=DataContext.CurrentModalVM, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}"
                    Tag="{Binding Path=DataContext.CurrentModalView, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}">
                <Control.Template>
                    <ControlTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding Width, Source={x:Reference Name=DismissButtonColumn}}"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="DismissButtonColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <!-Rectangle Fill="Red"
                                        Grid.ColumnSpan="3"/->
                            <Button x:Name="DismissButton"
                                    Style="{DynamicResource CaptionButtonStyle}"
                                    Foreground="{DynamicResource WindowForegroundBrush}"
                                    Content="{DynamicResource AnimatableContentControlCloseButtonIcon}"
                                    HorizontalAlignment="Right"
                                    VerticalAlignment="Top"
                                    Height="30"
                                    Visibility="Collapsed"
                                    Grid.Column="2"
                                    Grid.RowSpan="2"/>
                            <ContentControl x:Name="TitleContainer"
                                            Height="30"
                                            Visibility="Collapsed"
                                            Grid.Column="1"
                                            Grid.Row="0">
                                <TextBlock x:Name="Title"
                                        FontWeight="Bold"
                                        HorizontalAlignment="Center"
                                        TextAlignment="Center"
                                        VerticalAlignment="Center"/>
                                            <!-Visibility="{Binding HasTitle, Converter={StaticResource BooleanToVisibilityConverter}}"->
                            </ContentControl>
                            <ContentControl Content="{TemplateBinding Tag}"
                                            Grid.ColumnSpan="3"
                                            Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding CanDismiss}" Value="True">
                                <Setter TargetName="DismissButton" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="DismissButton" Property="Command" Value="{Binding DismissCommand}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding HasTitle}" Value="True">
                                <Setter TargetName="TitleContainer" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="Title" Property="Text" Value="{Binding Title}"/>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Control.Template>
            </Control>
        </mech:AnimatableContentControl-->
    </Grid>
</Window>
