using System;
using System.Collections.Generic;
using System.Text;
using System.Windows;
using System.Diagnostics;
using System.IO;
using SporeMods.BaseTypes;
using SporeMods.Core;
//using SporeMods.CommonUI.Localization;
//using SporeMods.Core.Context;
using System.Linq;

namespace SporeMods.CommonUI
{
	public static class OnStartUp
	{
		/*static bool EnsureEverythingIsOk()
		{
			return (SmmStorage.EnsureInstance() != null) &&
				(LanguageManager.EnsureInstance() != null) &&
				(SmmInfo.EnsureInstance() != null) &&
				(AppPaths.EnsureInstance() != null);
		}*/

		public static bool EnsureAllGood(bool mergeCurrentDisplayLanguage, Action ifSuccessful = null, Action ifFailed = null)
		{
			bool allGood = NOCSingleInstances.All.All(x => x.Ensure());

			if (allGood)
				allGood = IsConfigVersionCompatible(out Version _);

			Action after = allGood ? ifSuccessful : ifFailed;
			if (after != null)
				after();

			if (allGood && mergeCurrentDisplayLanguage)
                Localization.LanguageManager.Instance.TryRefreshWpfResources();

			return true;
		}




		static bool _isConfigValidationCompleted = false;
		public static bool IsConfigValidationCompleted
		{
			get => _isConfigValidationCompleted;
		}

		static bool IsConfigVersionCompatible(out Version previousVersion)
		{
			previousVersion = null;
			/*if (Settings.LastModManagerVersion == null)
			{
				MessageBox.Show("The current config was generated by a pre-release version of the Spore Mod Manager which is too old to be compatible with the version you're using now. Please purge it to proceed.");
				
				if (isWpfApp)
					Application.Current.Shutdown();
				else
					Process.GetCurrentProcess().Close();

				return false;
			}*/

			previousVersion = SmmInfo.Instance.MgrLastVersion;
			bool compatible = SmmInfo.Instance.MgrVersion >= previousVersion;

			if (compatible)
				previousVersion = SmmInfo.Instance.MgrVersion;
			else
			{
				if (MessageBox.Show("The current config is for a newer version of the Spore Mod Manager than the version you're using. Check for updates now?", string.Empty, MessageBoxButton.YesNo) == MessageBoxResult.Yes)
                {
					//Updater.CheckForUpdates(true);
                }

				Application.Current.Shutdown();
			}

			_isConfigValidationCompleted = true;
			return compatible;
		}

		public static void WarnIfMissingOriginPrerequisites()
		{
			/*try
			{
				if (SporeLauncher.HasOriginPrerequisites(out Stream prereq1, out Stream prereq2))
				{
					if ((prereq1 == null) || (prereq2 == null))
						throw new ArgumentNullException();
					else if (prereq1.Length != 24885248)
						throw new InvalidOperationException();
				}
			}
			catch (Exception ex)
			{
				MessageBox.Show("You are running a build of the Spore Mod Manager which is missing Origin Spore-specific prerequisites.\n\n" +
					"As such, if you are have installed Spore from Origin, you will have to use a build which has these prerequisites (such as an official build) at least once before you will be able to use this one. (NOT LOCALIZED)\n\n\n\n" + ex.ToString(), "Warning regarding Origin Spore (NOT LOCALIZED)");
			}*/
		}
	}
}
